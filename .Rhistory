Y.fit <- lm(as.formula(paste("Y~RHC+W.fit+",X)), data=RHC_data_reform_WfitAdd)
round(summary(Y.fit)$coefficients[1:5,],3)
IVReg <- ivreg::ivreg(as.formula(paste("Y~RHC+ph1+hema1+",X,"|",
paste0(Z,"+RHC+",X,collapse = "+"))),
data=RHC_data_reform)
round(summary(IVReg)$coefficients[1:5,],3)
OLS <- lm(as.formula(paste("Y~RHC+",W,"+",Z,"+",X)), data=RHC_data_reform)
round(summary(OLS)$coefficients[1:5,],3)
h <- function(data,theta.h){
## data = [Y,D,W,Z,X]
## h1(d,w,x) = b0 + b1*d + b2*w + b3*x
return( as.vector(
as.matrix(cbind(1,data[,c(2, 3:4, 6+1:nX)]))%*%theta.h # [1,D,W,X]*theta
) )
}
moment.h <- function(data,theta.h){
## data = [Y,D,W,Z,X]
## E[ g_h(D,Z,X) * {Y-h(D,W,X)} ] = 0
return( as.matrix(
cbind(1,data[,c(2,5:6,6+1:nX)])*                # g_h(D,Z,X)
as.vector((data[,1]-h(data,theta.h)))         # Y-h(D,W,X)
) )
}
extended.moment <-                ## Psi function
function(data,theta.extended){
## data = [Y,D,W,Z,X]
theta.ate <- theta.extended[1]
theta.h <- theta.extended[1+1:(4+nX)]
data1 <- data0 <- data
data1[,2] <- 1
data0[,2] <- 0
cbind( h(data1,theta.h)-h(data0,theta.h)-theta.ate,
moment.h(data,theta.h) )
}
sum.extended.moment <-            ## average of Psi over the observations
function(data,theta.extended){
sum(apply(extended.moment(data,theta.extended),2,mean)^2)
}
Moment.Equation <-                ## Find the solutions of the moment equation
optim(par=as.vector(c(IVReg$coefficients[2],IVReg$coefficients)),
fn=function(theta){sum.extended.moment(data=RHC_data_reform,theta)})
Moment.Equation$par[1]           ## ATE
round(cbind(Moment.Equation$par[1+1:5],
IVReg$coefficients[1:5]),3)   ## (ATE,coef,RHC,ph1,hema1,age)
AVAR <- function(data,theta.extended,extended.moment){
Gradient <- function(data,theta.E){
d <- length(theta.E)
m <- ncol(extended.moment(data,theta.E))
G <- matrix(0,d,m)
for(ii in 1:d){
pert <- rep(0,d)
pert[ii] <- pert[ii]+10^(-8)
G[ii,] <- apply((extended.moment(data,theta.E+pert) -
extended.moment(data,theta.E-pert))/(2*10^(-8)),2,mean)
}
return(G) # d*m
}
Grad <- Gradient(data,theta.extended)
Res.Sq <- t(extended.moment(data, theta.extended))%*%
extended.moment(data,theta.extended)/nrow(data)
SolveG <- MASS::ginv(Grad, tol=10^(-12))
Avar <- t(SolveG)%*%Res.Sq%*%(SolveG)/nrow(data)
return(Avar)
}
Avar <- AVAR(RHC_data_reform,
Moment.Equation$par,
extended.moment)
RESULT <- cbind(c(Moment.Equation$par[1], sqrt(Avar[1,1]),
Moment.Equation$par[1]-1.96*sqrt(Avar[1,1]),
Moment.Equation$par[1]+1.96*sqrt(Avar[1,1])),
c(summary(IVReg)$coefficients[2,1],summary(IVReg)$coefficients[2,2],
summary(IVReg)$coefficients[2,1]-1.96*summary(IVReg)$coefficients[2,2],
summary(IVReg)$coefficients[2,1]+1.96*summary(IVReg)$coefficients[2,2]))
colnames(RESULT) <- c("Bridge Ft","2SLS")
rownames(RESULT)  <- c("Est","SE","95% CI LB","95% CI UB")
round(RESULT,3)
library(Hmisc)
getHdata(rhc)
library(ATbounds)
RHC$Y <- apply(cbind(rhc$lstctdte - rhc$sadmdte,30),1,min)  ## survival date clipped at 30 days
Z_ls <- c("pafi1", "paco21")
W_ls <- c("ph1", "hema1")
D_ls <- "RHC"
X_ls <- colnames(RHC)[3:74]
X_ls <- X_ls[! X_ls %in% c(D_ls,Z_ls,W_ls)]
nX <- length(X_ls)
RHC_data_reform <- RHC[,c("Y",D_ls,W_ls,Z_ls,X_ls)]  ## Only use relevant variables
round(RHC_data_reform[1:10,1:10],3)
## concatenating variables to make formulas
Z <- paste0(Z_ls,collapse ="+")
W <- paste0(W_ls,collapse ="+")
X <- paste0(X_ls,collapse ="+")
## 1st stage
W.fit <- lm(as.formula(paste("cbind(ph1,hema1)~RHC+",paste0(Z,"+",X,collapse = "+"))),
data=RHC_data_reform)
RHC_data_reform_WfitAdd <- RHC_data_reform
RHC_data_reform_WfitAdd$W.fit <- predict(W.fit)
## 2st stage
Y.fit <- lm(as.formula(paste("Y~RHC+W.fit+",X)), data=RHC_data_reform_WfitAdd)
round(summary(Y.fit)$coefficients[1:5,],3)
W.fit
RHC_data_reform <- RHC[,c("Y",D_ls,W_ls,Z_ls,X_ls)]  ## Only use relevant variables
colnames(RHC_data_reform) <- c("Y","D","W01","W02","Z01","Z02",sprintf("X0.2d",1:nX))
RHC_data_reform <- RHC[,c("Y",D_ls,W_ls,Z_ls,X_ls)]  ## Only use relevant variables
colnames(RHC_data_reform) <- c("Y","D","W01","W02","Z01","Z02",sprintf("X%0.2d",1:nX))
round(RHC_data_reform[1:10,1:10],3)
library(Hmisc)
getHdata(rhc)
library(ATbounds)
RHC$Y <- apply(cbind(rhc$lstctdte - rhc$sadmdte,30),1,min)  ## survival date clipped at 30 days
Z_ls <- c("pafi1", "paco21")
W_ls <- c("ph1", "hema1")
D_ls <- "RHC"
X_ls <- colnames(RHC)[3:74]
X_ls <- X_ls[! X_ls %in% c(D_ls,Z_ls,W_ls)]
nX <- length(X_ls)
RHC_data_reform <- RHC[,c("Y",D_ls,W_ls,Z_ls,X_ls)]  ## Only use relevant variables
round(RHC_data_reform[1:10,1:10],3)
## concatenating variables to make formulas
Z <- paste0(Z_ls,collapse ="+")
W <- paste0(W_ls,collapse ="+")
X <- paste0(X_ls,collapse ="+")
## 1st stage
W.fit <- lm(as.formula(paste("cbind(ph1,hema1)~RHC+",paste0(Z,"+",X,collapse = "+"))),
data=RHC_data_reform)
RHC_data_reform_WfitAdd <- RHC_data_reform
RHC_data_reform_WfitAdd$W.fit <- predict(W.fit)
## 2st stage
Y.fit <- lm(as.formula(paste("Y~RHC+W.fit+",X)), data=RHC_data_reform_WfitAdd)
round(summary(Y.fit)$coefficients[1:5,],3)
IVReg <- ivreg::ivreg(as.formula(paste("Y~RHC+ph1+hema1+",X,"|",
paste0(Z,"+RHC+",X,collapse = "+"))),
data=RHC_data_reform)
round(summary(IVReg)$coefficients[1:5,],3)
as.formula(paste("Y~RHC+ph1+hema1+",X,"|",
paste0(Z,"+RHC+",X,collapse = "+")))
print(as.formula(paste("Y~RHC+ph1+hema1+",X,"|",
paste0(Z,"+RHC+",X,collapse = "+"))))
Z
## ivreg(Y~D+W+X|D+Z+X)
IVReg <- ivreg::ivreg(as.formula(paste("Y~RHC+ph1+hema1+",X,"|",
paste0("RHC+",Z,"+",X,collapse = "+"))),
data=RHC_data_reform)
round(summary(IVReg)$coefficients[1:5,],3)
?gmm
## ivreg(Y~D+W+X|D+Z+X)
IVReg <- ivreg::ivreg(as.formula(paste("Y~RHC+ph1+hema1+",X,"|",
paste("RHC+",Z,"+",X))),
data=RHC_data_reform)
round(summary(IVReg)$coefficients[1:5,],3)
## gmm(Y~D+W+X,~D+Z+X,data)
GMM <- gmm::gmm(as.formula(paste("Y~RHC+ph1+hema1+",X)),
as.formula(paste("~RHC+",Z,"+",X)),
data=RHC_data_reform)
round(summary(GMM)$coefficients[1:5,],3)
?gmm
## lm(Y~D+W+Z+X)
OLS <- lm(as.formula(paste("Y~RHC+",W,"+",Z,"+",X)), data=RHC_data_reform)
round(summary(OLS)$coefficients[1:5,],3)
h <- function(data,theta.h){
## data = [Y,D,W,Z,X]
## h1(d,w,x) = b0 + b1*d + b2*w + b3*x
return( as.vector(
as.matrix(cbind(1,data[,c(2, 3:4, 6+1:nX)]))%*%theta.h # [1,D,W,X]*theta
) )
}
moment.h <- function(data,theta.h){
## data = [Y,D,W,Z,X]
## E[ g_h(D,Z,X) * {Y-h(D,W,X)} ] = 0
return( as.matrix(
cbind(1,data[,c(2,5:6,6+1:nX)])*                # g_h(D,Z,X)
as.vector((data[,1]-h(data,theta.h)))         # Y-h(D,W,X)
) )
}
extended.moment <-                ## Psi function
function(data,theta.extended){
## data = [Y,D,W,Z,X]
theta.ate <- theta.extended[1]
theta.h <- theta.extended[1+1:(4+nX)]
data1 <- data0 <- data
data1[,2] <- 1
data0[,2] <- 0
cbind( h(data1,theta.h)-h(data0,theta.h)-theta.ate,
moment.h(data,theta.h) )
}
sum.extended.moment <-            ## average of Psi over the observations
function(data,theta.extended){
sum(apply(extended.moment(data,theta.extended),2,mean)^2)
}
Moment.Equation <-                ## Find the solutions of the moment equation
optim(par=as.vector(c(IVReg$coefficients[2],IVReg$coefficients)),
fn=function(theta){sum.extended.moment(data=RHC_data_reform,theta)})
Moment.Equation$par[1]           ## ATE
round(cbind(Moment.Equation$par[1+1:5],
IVReg$coefficients[1:5]),3)   ## (ATE,coef,RHC,ph1,hema1,age)
AVAR <- function(data,theta.extended,extended.moment){
Gradient <- function(data,theta.E){
d <- length(theta.E)
m <- ncol(extended.moment(data,theta.E))
G <- matrix(0,d,m)
for(ii in 1:d){
pert <- rep(0,d)
pert[ii] <- pert[ii]+10^(-8)
G[ii,] <- apply((extended.moment(data,theta.E+pert) -
extended.moment(data,theta.E-pert))/(2*10^(-8)),2,mean)
}
return(G) # d*m
}
Grad <- Gradient(data,theta.extended)
Res.Sq <- t(extended.moment(data, theta.extended))%*%
extended.moment(data,theta.extended)/nrow(data)
SolveG <- MASS::ginv(Grad, tol=10^(-12))
Avar <- t(SolveG)%*%Res.Sq%*%(SolveG)/nrow(data)
return(Avar)
}
Avar <- AVAR(RHC_data_reform,
Moment.Equation$par,
extended.moment)
RESULT <- cbind(c(Moment.Equation$par[1], sqrt(Avar[1,1]),
Moment.Equation$par[1]-1.96*sqrt(Avar[1,1]),
Moment.Equation$par[1]+1.96*sqrt(Avar[1,1])),
c(summary(IVReg)$coefficients[2,1],summary(IVReg)$coefficients[2,2],
summary(IVReg)$coefficients[2,1]-1.96*summary(IVReg)$coefficients[2,2],
summary(IVReg)$coefficients[2,1]+1.96*summary(IVReg)$coefficients[2,2]))
colnames(RESULT) <- c("Bridge Ft","2SLS")
rownames(RESULT)  <- c("Est","SE","95% CI LB","95% CI UB")
round(RESULT,3)
library(Hmisc)
getHdata(rhc)
library(ATbounds)
RHC$Y <- apply(cbind(rhc$lstctdte - rhc$sadmdte,30),1,min)  ## survival date clipped at 30 days
Z_ls <- c("pafi1", "paco21")
W_ls <- c("ph1", "hema1")
D_ls <- "RHC"
X_ls <- colnames(RHC)[3:74]
X_ls <- X_ls[! X_ls %in% c(D_ls,Z_ls,W_ls)]
nX <- length(X_ls)
RHC_data_reform <- RHC[,c("Y",D_ls,W_ls,Z_ls,X_ls)]  ## Only use relevant variables
round(RHC_data_reform[1:10,1:10],3)
## concatenating variables to make formulas
Z <- paste0(Z_ls,collapse ="+")
W <- paste0(W_ls,collapse ="+")
X <- paste0(X_ls,collapse ="+")
## 1st stage
# lm(W~D+Z+X)
W.fit <- lm(as.formula(paste("cbind(ph1,hema1)~RHC+",Z,"+",X)),
data=RHC_data_reform)
RHC_data_reform_WfitAdd <- RHC_data_reform
RHC_data_reform_WfitAdd$W.fit <- predict(W.fit)
## 2st stage
# lm(Y~D+W.hat+X)
Y.fit <- lm(as.formula(paste("Y~RHC+W.fit+",X)), data=RHC_data_reform_WfitAdd)
round(summary(Y.fit)$coefficients[1:5,],3)
library(Hmisc)
getHdata(rhc)
library(ATbounds)
RHC$Y <- apply(cbind(rhc$lstctdte - rhc$sadmdte,30),1,min)  ## survival date clipped at 30 days
Z_ls <- c("pafi1", "paco21")
W_ls <- c("ph1", "hema1")
D_ls <- "RHC"
X_ls <- colnames(RHC)[3:74]
X_ls <- X_ls[! X_ls %in% c(D_ls,Z_ls,W_ls)]
nX <- length(X_ls)
RHC_data_reform <- RHC[,c("Y",D_ls,W_ls,Z_ls,X_ls)]  ## Only use relevant variables
round(RHC_data_reform[1:10,1:10],3)
## concatenating variables to make formulas
Z <- paste0(Z_ls,collapse ="+")
W <- paste0(W_ls,collapse ="+")
X <- paste0(X_ls,collapse ="+")
## 1st stage
# lm(W~D+Z+X)
P2S.W.fit <- lm(as.formula(paste("cbind(ph1,hema1)~RHC+",Z,"+",X)),
data=RHC_data_reform)
RHC_data_reform_WfitAdd <- RHC_data_reform
RHC_data_reform_WfitAdd$W.fit <- predict(P2S.W.fit)
## 2nd stage
# lm(Y~D+W.hat+X)
P2S.Y.fit <- lm(as.formula(paste("Y~RHC+W.fit+",X)), data=RHC_data_reform_WfitAdd)
round(summary(P2S.Y.fit)$coefficients[1:5,],3)
## ivreg(Y~D+W+X|D+Z+X,data)
IVReg <- ivreg::ivreg(as.formula(paste("Y~RHC+ph1+hema1+",X,"|","RHC+",Z,"+",X)),
data=RHC_data_reform)
round(summary(IVReg)$coefficients[1:5,],3)
## gmm(Y~D+W+X,~D+Z+X,data)
GMM <- gmm::gmm(as.formula(paste("Y~RHC+ph1+hema1+",X)),
as.formula(paste("~RHC+",Z,"+",X)),
data=RHC_data_reform)
round(summary(GMM)$coefficients[1:5,],3)
## lm(Y~D+W+Z+X)
OLS <- lm(as.formula(paste("Y~RHC+",W,"+",Z,"+",X)), data=RHC_data_reform)
round(summary(OLS)$coefficients[1:5,],3)
h <- function(data,theta.h){
## data = [Y,D,W,Z,X]
## h1(d,w,x) = b0 + b1*d + b2*w + b3*x
return( as.vector(
as.matrix(cbind(1,data[,c(2, 3:4, 6+1:nX)]))%*%theta.h # [1,D,W,X]*theta
) )
}
moment.h <- function(data,theta.h){
## data = [Y,D,W,Z,X]
## E[ g_h(D,Z,X) * {Y-h(D,W,X)} ] = 0
return( as.matrix(
cbind(1,data[,c(2,5:6,6+1:nX)])*                # g_h(D,Z,X)
as.vector((data[,1]-h(data,theta.h)))         # Y-h(D,W,X)
) )
}
extended.moment <-                ## Psi function
function(data,theta.extended){
## data = [Y,D,W,Z,X]
theta.ate <- theta.extended[1]
theta.h <- theta.extended[1+1:(4+nX)]
data1 <- data0 <- data
data1[,2] <- 1
data0[,2] <- 0
cbind( h(data1,theta.h)-h(data0,theta.h)-theta.ate,
moment.h(data,theta.h) )
}
sum.extended.moment <-            ## (average of Psi over the observations)^2
function(data,theta.extended){
sum(apply(extended.moment(data,theta.extended),2,mean)^2)
}
Moment.Equation <-                ## Find the solutions of the moment equation
optim(par=as.vector(c(IVReg$coefficients[2],IVReg$coefficients)),
fn=function(theta){sum.extended.moment(data=RHC_data_reform,theta)})
RHC_data_reform_D1 <- RHC_data_reform_D0 <- RHC_data_reform
beta.est <- Moment.Equation$par[1]
theta.est <- Moment.Equation$par[-1]
RHC_data_reform_D1 <- RHC_data_reform_D0 <- RHC_data_reform
RHC_data_reform_D1$RHC <- 1
RHC_data_reform_D0$RHC <- 0
mean( h(RHC_data_reform_D1$RHC,theta.est) - h(RHC_data_reform_D0$RHC,theta.est) - beta.est )
beta.est <- Moment.Equation$par[1]
theta.est <- Moment.Equation$par[-1]
RHC_data_reform_D1 <- RHC_data_reform_D0 <- RHC_data_reform
RHC_data_reform_D1$RHC <- 1
RHC_data_reform_D0$RHC <- 0
mean( h(RHC_data_reform_D1$RHC,theta.est) - h(RHC_data_reform_D0$RHC,theta.est) - beta.est )
h(RHC_data_reform_D0$RHC,theta.est)
RHC_data_reform_D0$RHC
mean( h(RHC_data_reform_D1,theta.est) - h(RHC_data_reform_D0,theta.est) - beta.est )
round(mean( h(RHC_data_reform_D1,theta.est) - h(RHC_data_reform_D0,theta.est) - beta.est ),3)
mean( Y - h(RHC_data_reform,theta.est) )
mean( RHC_data_reform$Y - h(RHC_data_reform,theta.est) )
## Checking aver[ g_h(D,Z,X)*{Y-h(D,W,X)} ] = 0
c( mean( RHC_data_reform$Y - h(RHC_data_reform,theta.est) ),
mean( RHC_data_reform$D*(RHC_data_reform$Y - h(RHC_data_reform,theta.est)) ),
mean( RHC_data_reform$pafi1*(RHC_data_reform$Y - h(RHC_data_reform,theta.est)) ),
mean( RHC_data_reform$paco21*(RHC_data_reform$Y - h(RHC_data_reform,theta.est)) ),
mean( RHC_data_reform$age*(RHC_data_reform$Y - h(RHC_data_reform,theta.est)) )
)
mean( RHC_data_reform$Y - h(RHC_data_reform,theta.est) )
mean( RHC_data_reform$D*(RHC_data_reform$Y - h(RHC_data_reform,theta.est)) )
mean( RHC_data_reform$RHC*(RHC_data_reform$Y - h(RHC_data_reform,theta.est)) )
## Checking aver[ g_h(D,Z,X)*{Y-h(D,W,X)} ] = 0
c( mean( RHC_data_reform$Y - h(RHC_data_reform,theta.est) ),
mean( RHC_data_reform$RHC*(RHC_data_reform$Y - h(RHC_data_reform,theta.est)) ),
mean( RHC_data_reform$pafi1*(RHC_data_reform$Y - h(RHC_data_reform,theta.est)) ),
mean( RHC_data_reform$paco21*(RHC_data_reform$Y - h(RHC_data_reform,theta.est)) ),
mean( RHC_data_reform$age*(RHC_data_reform$Y - h(RHC_data_reform,theta.est)) )
)
## Checking aver[ h(1,W)-h(0,W)-beta ] = 0
round(mean( h(RHC_data_reform_D1,theta.est) - h(RHC_data_reform_D0,theta.est) - beta.est ),6)
## Checking aver[ g_h(D,Z,X)*{Y-h(D,W,X)} ] = 0
round(c( mean( RHC_data_reform$Y - h(RHC_data_reform,theta.est) ),
mean( RHC_data_reform$RHC*(RHC_data_reform$Y - h(RHC_data_reform,theta.est)) ),
mean( RHC_data_reform$pafi1*(RHC_data_reform$Y - h(RHC_data_reform,theta.est)) ),
mean( RHC_data_reform$paco21*(RHC_data_reform$Y - h(RHC_data_reform,theta.est)) ),
mean( RHC_data_reform$age*(RHC_data_reform$Y - h(RHC_data_reform,theta.est)) )
),6)
library(Hmisc)
getHdata(rhc)
library(ATbounds)
RHC$Y <- apply(cbind(rhc$lstctdte - rhc$sadmdte,30),1,min)  ## survival date clipped at 30 days
Z_ls <- c("pafi1", "paco21")
W_ls <- c("ph1", "hema1")
D_ls <- "RHC"
X_ls <- colnames(RHC)[3:74]
X_ls <- X_ls[! X_ls %in% c(D_ls,Z_ls,W_ls)]
nX <- length(X_ls)
RHC_data_reform <- RHC[,c("Y",D_ls,W_ls,Z_ls,X_ls)]  ## Only use relevant variables
round(RHC_data_reform[1:10,1:10],3)
## concatenating variables to make formulas
Z <- paste0(Z_ls,collapse ="+")
W <- paste0(W_ls,collapse ="+")
X <- paste0(X_ls,collapse ="+")
## 1st stage
# lm(W~D+Z+X)
P2S.W.fit <- lm(as.formula(paste("cbind(ph1,hema1)~RHC+",Z,"+",X)),
data=RHC_data_reform)
RHC_data_reform_WfitAdd <- RHC_data_reform
RHC_data_reform_WfitAdd$W.fit <- predict(P2S.W.fit)
## 2nd stage
# lm(Y~D+W.hat+X)
P2S.Y.fit <- lm(as.formula(paste("Y~RHC+W.fit+",X)), data=RHC_data_reform_WfitAdd)
round(summary(P2S.Y.fit)$coefficients[1:5,],3)
## ivreg(Y~D+W+X|D+Z+X,data)
IVReg <- ivreg::ivreg(as.formula(paste("Y~RHC+ph1+hema1+",X,"|","RHC+",Z,"+",X)),
data=RHC_data_reform)
round(summary(IVReg)$coefficients[1:5,],3)
## gmm(Y~D+W+X,~D+Z+X,data)
GMM <- gmm::gmm(as.formula(paste("Y~RHC+ph1+hema1+",X)),
as.formula(paste("~RHC+",Z,"+",X)),
data=RHC_data_reform)
library(Hmisc)
getHdata(rhc)
library(ATbounds)
RHC$Y <- apply(cbind(rhc$lstctdte - rhc$sadmdte,30),1,min)  ## survival date clipped at 30 days
Z_ls <- c("pafi1", "paco21")
W_ls <- c("ph1", "hema1")
D_ls <- "RHC"
X_ls <- colnames(RHC)[3:74]
X_ls <- X_ls[! X_ls %in% c(D_ls,Z_ls,W_ls)]
nX <- length(X_ls)
RHC_data_reform <- RHC[,c("Y",D_ls,W_ls,Z_ls,X_ls)]  ## Only use relevant variables
round(RHC_data_reform[1:10,1:10],3)
head(RHC)
?rhc
?RHC
library(Hmisc)
getHdata(rhc)
library(ATbounds)
RHC$Y <- apply(cbind(rhc$lstctdte - rhc$sadmdte,30),1,min)  ## survival date clipped at 30 days
Z_ls <- c("pafi1", "paco21")
W_ls <- c("ph1", "hema1")
D_ls <- "RHC"
X_ls <- colnames(RHC)[3:73]
X_ls <- X_ls[! X_ls %in% c(D_ls,Z_ls,W_ls)]
nX <- length(X_ls)
RHC_data_reform <- RHC[,c("Y",D_ls,W_ls,Z_ls,X_ls)]  ## Only use relevant variables
round(RHC_data_reform[1:10,1:10],3)
## concatenating variables to make formulas
Z <- paste0(Z_ls,collapse ="+")
W <- paste0(W_ls,collapse ="+")
X <- paste0(X_ls,collapse ="+")
## 1st stage
# lm(W~D+Z+X)
P2S.W.fit <- lm(as.formula(paste("cbind(ph1,hema1)~RHC+",Z,"+",X)),
data=RHC_data_reform)
RHC_data_reform_WfitAdd <- RHC_data_reform
RHC_data_reform_WfitAdd$W.fit <- predict(P2S.W.fit)
## 2nd stage
# lm(Y~D+W.hat+X)
P2S.Y.fit <- lm(as.formula(paste("Y~RHC+W.fit+",X)), data=RHC_data_reform_WfitAdd)
round(summary(P2S.Y.fit)$coefficients[1:5,],3)
## ivreg(Y~D+W+X|D+Z+X,data)
IVReg <- ivreg::ivreg(as.formula(paste("Y~RHC+ph1+hema1+",X,"|","RHC+",Z,"+",X)),
data=RHC_data_reform)
round(summary(IVReg)$coefficients[1:5,],3)
## gmm(Y~D+W+X,~D+Z+X,data)
GMM <- gmm::gmm(as.formula(paste("Y~RHC+ph1+hema1+",X)),
as.formula(paste("~RHC+",Z,"+",X)),
data=RHC_data_reform)
round(summary(GMM)$coefficients[1:5,],3)
## lm(Y~D+W+Z+X)
OLS <- lm(as.formula(paste("Y~RHC+",W,"+",Z,"+",X)), data=RHC_data_reform)
round(summary(OLS)$coefficients[1:5,],3)
h <- function(data,theta.h){
## data = [Y,D,W,Z,X]
## h1(d,w,x) = b0 + b1*d + b2*w + b3*x
return( as.vector(
as.matrix(cbind(1,data[,c(2, 3:4, 6+1:nX)]))%*%theta.h # [1,D,W,X]*theta
) )
}
moment.h <- function(data,theta.h){
## data = [Y,D,W,Z,X]
## E[ g_h(D,Z,X) * {Y-h(D,W,X)} ] = 0
return( as.matrix(
cbind(1,data[,c(2,5:6,6+1:nX)])*                # g_h(D,Z,X)
as.vector((data[,1]-h(data,theta.h)))         # Y-h(D,W,X)
) )
}
extended.moment <-                ## Psi function
function(data,theta.extended){
## data = [Y,D,W,Z,X]
theta.ate <- theta.extended[1]
theta.h <- theta.extended[1+1:(4+nX)]
data1 <- data0 <- data
data1[,2] <- 1
data0[,2] <- 0
cbind( h(data1,theta.h)-h(data0,theta.h)-theta.ate,
moment.h(data,theta.h) )
}
sum.extended.moment <-            ## (average of Psi over the observations)^2
function(data,theta.extended){
sum(apply(extended.moment(data,theta.extended),2,mean)^2)
}
Moment.Equation <-                ## Find the solutions of the moment equation
optim(par=as.vector(c(IVReg$coefficients[2],IVReg$coefficients)),
fn=function(theta){sum.extended.moment(data=RHC_data_reform,theta)})
beta.est <- Moment.Equation$par[1]
theta.est <- Moment.Equation$par[-1]
RHC_data_reform_D1 <- RHC_data_reform_D0 <- RHC_data_reform
RHC_data_reform_D1$RHC <- 1
RHC_data_reform_D0$RHC <- 0
## Checking aver[ h(1,W)-h(0,W)-beta ] = 0
round(mean( h(RHC_data_reform_D1,theta.est) - h(RHC_data_reform_D0,theta.est) - beta.est ),6)
## Checking aver[ g_h(D,Z,X)*{Y-h(D,W,X)} ] = 0
round(c( mean( RHC_data_reform$Y - h(RHC_data_reform,theta.est) ),
mean( RHC_data_reform$RHC*(RHC_data_reform$Y - h(RHC_data_reform,theta.est)) ),
mean( RHC_data_reform$pafi1*(RHC_data_reform$Y - h(RHC_data_reform,theta.est)) ),
mean( RHC_data_reform$paco21*(RHC_data_reform$Y - h(RHC_data_reform,theta.est)) ),
mean( RHC_data_reform$age*(RHC_data_reform$Y - h(RHC_data_reform,theta.est)) )
),6)
beta.est <- Moment.Equation$par[1]
theta.est <- Moment.Equation$par[-1]
round(beta.est,3)           ## β
Theta <- cbind(P2S.Y.fit$coefficients[1:5],
IVReg$coefficients[1:5],
GMM$coefficients[1:5],
theta.est[1+1:5])
colnames(Theta) <- c("P2S","ivreg","gmm","Bridge Ft")
round(Theta[1:5,],3)   ## θ
